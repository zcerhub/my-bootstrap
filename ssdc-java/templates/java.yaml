---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-service
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}-app
    release: {{ .Release.Name }}
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.java.containerPort }}
      protocol: TCP
      targetPort: {{ .Values.java.containerPort }}
      name: http-container
  selector:
    app: {{ .Release.Name }}-app
    release: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}-app
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.java.replicas }} 
  selector:
    matchLabels:
      app: {{ .Release.Name }}-app
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-app
        release: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: {{ quote .Values.java.containerPort }}
    spec:
      {{- if .Values.skywalking.enabled }}
      #Skywalking初始化容器
      initContainers:
        - name: skywalking-agent
          image: ctsi/skywalking-agent:8.1.0
          command: ["cp", "-rf", "/agent", "/tmp"]
          volumeMounts:
            - mountPath: /tmp
              name: sky-agent-volume
      {{- end -}}
      containers:
        - name: {{ .Release.Name }}
          image: {{ .Values.java.image }}
          imagePullPolicy: {{ .Values.java.imagePullPolicy }}
          resources:
            requests:
              memory: {{ cat .Values.resources.requests.memory "Mi"| nospace | quote}}
              cpu:  {{ cat .Values.resources.requests.cpu "m" | nospace | quote}}    
            limits:
              memory: {{ cat .Values.resources.limits.memory "Mi"| nospace | quote}}
              cpu:  {{ cat .Values.resources.limits.cpu "m" | nospace | quote}}
          ports:
          - containerPort: {{ .Values.java.containerPort }}   
          env:
          {{- range $key, $value :=  .Values.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- if .Values.skywalking.enabled }}
          #Skywalking环境变量配置
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAME
            value: "-Dskywalking.agent.instance_name=$(POD_NAME)"
          - name: MY_JAVA_OPTS
            valueFrom:
              configMapKeyRef:
                key: jvm.options
                name: app-version-api-config
          - name: SERVICE_NAME
            value: {{ .Values.skywalking.servicename }}
          - name: MY_SERVICE_NAME
            value: "-Dskywalking.agent.service_name=$(SERVICE_NAME)"
          - name: JAVA_OPTS
            value: "$(MY_JAVA_OPTS) $(MY_POD_NAME) $(MY_SERVICE_NAME)"
          {{- end -}}
          {{- if .Values.skywalking.enabled }}
          #Skywalking挂载agent
          volumeMounts:
          - mountPath: /skywalking
            name: sky-agent-volume
          {{- end -}}
      {{- if .Values.skywalking.enabled }}
      #Skywalking初始化agent空文件夹
      volumes:
        - name: sky-agent-volume
          emptyDir: {}
      {{- end -}}
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.nodeSelector | indent 2 }}
      {{- end }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets}}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-app: {{ .Release.Name }}-app
    release: {{ .Release.Name }}
  name:  {{ .Release.Name }}-app-monitor
  namespace: monitoring 
spec:
  endpoints:
  - interval: 10s
    path: /actuator/prometheus
    port: http-container
  namespaceSelector:
    matchNames:
    - {{ .Values.namespace }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-app
      release: {{ .Release.Name }}
