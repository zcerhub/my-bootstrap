apiVersion: elasticsearch.k8s.elastic.co/v1beta1
kind: Elasticsearch
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
  version: {{ .Values.image.tag }}
  http:
    tls:
      selfSignedCertificate:
        disabled: true  
  nodeSets:
  - name: elastic
    count: {{ .Values.nodeCount }}
    config:
      node.master: true
      node.data: true
      node.ingest: true
    podTemplate:
      metadata:
        labels:
          release: {{ .Release.Name }}
          {{- if .Values.logCollect }}
          log-collect: "true"
          {{- end }}
        annotations:
          sidecar.istio.io/inject: "false"          
      spec:
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
          resources:
{{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.plugins }}
        - name: install-plugins
          command: ["/bin/sh","-c"]
          args: ["{{- range .Values.plugins }}bin/elasticsearch-plugin install --batch {{ . }}; {{- end }}"]
        {{- end }}
        containers:
        - name: elasticsearch
          env:
          {{- range $key, $value :=  .Values.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}          
          - name: elastic
            valueFrom:
              secretKeyRef:
                key: elastic
                name: {{ .Release.Name }}-es-elastic-user
          resources:
{{- toYaml .Values.resources | nindent 12 }}
  volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.volume.size }}