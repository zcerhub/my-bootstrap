---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-service
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}-app
    release: {{ .Release.Name }}
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.java.containerPort }}
      protocol: TCP
      targetPort: {{ .Values.java.containerPort }}
      name: http-container
  selector:
    app: {{ .Release.Name }}-app
    release: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}-app
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.java.replicas }} 
  selector:
    matchLabels:
      app: {{ .Release.Name }}-app
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-app
        release: {{ .Release.Name }}
        {{- if .Values.logCollect }}
        log-collect: "true"
        {{- end }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: {{ quote .Values.java.containerPort }}
        {{- if or .Values.circuitBreaker.enabled .Values.currentLimiting.enabled .Values.loadBalancer.enabled .Values.timeout.enabled .Values.blackWhiteList.enabled }}
        sidecar.istio.io/inject: 'true'
        {{- else }}
        sidecar.istio.io/inject: 'false'
        {{- end }}
    spec:
      {{- if .Values.skywalking.enabled }}
      #Skywalking初始化容器
      initContainers:
        - name: skywalking-agent
          image: {{ .Values.skywalking.image }}
          command: ["cp", "-rf", "/agent", "/tmp"]
          volumeMounts:
            - mountPath: /tmp
              name: sky-agent-volume
      {{- end }}
      containers:
        - name: {{ .Release.Name }}
          image: {{ .Values.java.image }}
          imagePullPolicy: {{ .Values.java.imagePullPolicy }}
          {{- if .Values.skywalking.enabled }}
          #Skywalking挂载agent
          volumeMounts:
            - mountPath: /skywalking
              name: sky-agent-volume
          {{- end }}
          resources:
{{- toYaml .Values.resources | nindent 12 }}
          ports:
          - containerPort: {{ .Values.java.containerPort }}   
          env:
          {{- range $key, $value :=  .Values.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- if .Values.skywalking.enabled }}
          #Skywalking环境变量配置
          - name: SW_INSTANCE_NAME_PRE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: SW_INSTANCE_NAME
            value: "$(SW_INSTANCE_NAME_PRE)"
          - name: SW_AGENT_NAME
            value: {{ .Release.Name }}
          - name: SW_AGENT_COLLECTOR_BACKEND_SERVICES
            value: {{ .Values.skywalking.collector }}
          - name: JAVA_TOOL_OPTIONS
            value: "-javaagent:skywalking/agent/skywalking-agent.jar"
          {{- end }}
      {{- if .Values.useGpu }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              {{- if .Values.nodeAffinityPreset.nodeSelectorTerms.nvidiaComCudaDriverMajor }}
              - key: nvidia.com/cuda.driver.major
                operator: In
                values:
                  - {{ .Values.nodeAffinityPreset.nodeSelectorTerms.nvidiaComCudaDriverMajor }}
              {{- end }}
              {{- if .Values.nodeAffinityPreset.nodeSelectorTerms.nvidiaComCudaDriverMinor }}
              - key: nvidia.com/cuda.driver.minor
                operator: In
                values:
                  - {{ .Values.nodeAffinityPreset.nodeSelectorTerms.nvidiaComCudaDriverMinor }}
              {{- end }}
              {{- if .Values.nodeAffinityPreset.nodeSelectorTerms.nvidiaComFamily }}
              - key: nvidia.com/gpu.family
                operator: In
                values:
                  - {{ .Values.nodeAffinityPreset.nodeSelectorTerms.nvidiaComFamily }}
              {{- end }}
      {{- end }}
      {{- if .Values.useGpu }}
      tolerations:
        - key: gpu
          operator: "Equal"
          value: true
          effect: "NoSchedule"
      {{- end }}
      {{- if .Values.skywalking.enabled }}
      #Skywalking初始化agent空文件夹
      volumes:
        - name: sky-agent-volume
          emptyDir: {}
      {{- end -}}
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.nodeSelector | indent 2 }}
      {{- end }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets}}
---
{{- if .Values.monitor.enabled}}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-app: {{ .Release.Name }}-app
    release: {{ .Release.Name }}
  name:  {{ .Release.Name }}-app-monitor
  namespace: {{ .Values.namespace }} 
spec:
  endpoints:
  - interval: 60s
    path: /actuator/prometheus
    port: http-container
    relabelings:
      - action: replace
        regex: (.*)
        sourceLabels:
          - __meta_kubernetes_service_label_release
        targetLabel: service
  namespaceSelector:
    matchNames:
    - {{ .Values.namespace }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-app
      release: {{ .Release.Name }}
{{- end -}}